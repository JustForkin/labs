'use strict';var canvas,info,debug,THREE,mainClick,mainDown,mainUp,mainMove,mainRay,v,shader,loader,V={},TWEEN=TWEEN||null;V.AR8="undefined"!=typeof Uint8Array?Uint8Array:Array;V.AR16="undefined"!=typeof Uint16Array?Uint16Array:Array;V.AR32="undefined"!=typeof Float32Array?Float32Array:Array;V.PI=Math.PI;V.PI90=0.5*V.PI;V.PI270=V.PI+V.PI90;V.TwoPI=2*V.PI;V.ToRad=V.PI/180;V.ToDeg=180/V.PI;V.Resolution={w:1600,h:900,d:200,z:10,f:40};V.sqrt=Math.sqrt;V.abs=Math.abs;V.max=Math.max;V.pow=Math.pow;
V.floor=Math.floor;V.round=Math.round;V.lerp=function(a,b,c){return a+(b-a)*c};V.rand=function(a,b,c){return 1*V.lerp(a,b,Math.random()).toFixed(c||3)};V.randInt=function(a,b,c){return 1*V.lerp(a,b,Math.random()).toFixed(c||0)};V.randColor=function(){return"#"+Math.floor(16777215*Math.random()).toString(16)};V.MeshList="plane sphere skull skullhigh head woman babe".split(" ");V.Main=null;
V.View=function(a,b,c,d){this.renderMode="";window.top.main.previewTheme();this.dimentions={w:window.innerWidth,h:window.innerHeight,r:window.innerWidth/window.innerHeight};this.mem="";this.canvas=canvas;this.debug=debug;this.info=info;this.loader=loader;this.renderer=new THREE.WebGLRenderer({canvas:canvas,precision:"mediump",antialias:!0,alpha:!0});this.renderer.setSize(this.dimentions.w,this.dimentions.h);this.renderer.setPixelRatio(window.devicePixelRatio);this.renderer.setClearColor(0,0);this.renderer.autoClear=
!1;this.clock=new THREE.Clock;this.delta=0;this.z=null;this.zones=[];this.scene=new THREE.Scene;this.sceneBlob=new THREE.Scene;this.nav=new V.Nav(this,a,b,c);this.base=new THREE.Group;this.content=new THREE.Group;this.skinned=new THREE.Group;this.scene.add(this.base);this.scene.add(this.content);this.scene.add(this.skinned);this.environment=this.sky=null;this.initGeo();this.initMat();this.pool=new V.SeaPool(this);this.impool=new V.ImgPool(this);d&&this.loadBasic();this.postEffect=null;this.deb="";
this.f=[0,0,0,0];this.meshs=[];this.cars=[];this.speeds=[];this.wheels=[];this.steering=[];this.lines=[];this.anchors={};this.ps=[];this.model="skull";this.w=this.groundMirror=this.basic=null;this.isWithSerious=this.isW=!1;this.imput=new V.UserImput(this);this.material=new V.Material(this);window.onresize=function(a){this.resize(a)}.bind(this)};
V.View.prototype={constructor:V.View,render:function(){this.delta=this.clock.getDelta();this.w&&!this.isW&&this.w.isReady&&(this.wFun(),this.isW=!0);THREE.AnimationHandler.update(this.delta);this.isWithSerious&&this.renderer.resetGLState();TWEEN&&TWEEN.update();this.groundMirror&&this.groundMirror.render();this.sky&&this.sky.update();null!==this.postEffect&&this.postEffect.isActive?this.postEffect.render():this.renderer.render(this.scene,this.nav.camera);var a=this.f;a[0]=Date.now();a[0]-1E3>a[1]&&
(a[1]=a[0],a[3]=a[2],a[2]=0);a[2]++;this.debug.innerHTML="THREE "+a[3]+this.deb},bytesToSize:function(a,b){if(0==a)return"n/a";var c=Math.pow(10,void 0!==b?b:0),d=Math.floor(Math.log(a)/Math.log(1024));return Math.round(a*c/Math.pow(1024,d))/c+" "+["bytes","kb","mb","gb","tb"][d]},initSky:function(){this.sky=new V.Skylab(this)},initGui:function(a){this.gui=new V.Gui(a)},ssao:function(a){this.renderMode="ssao";this.postEffect=new V.PostEffect(this,"ssao",a)},metaball:function(a){this.renderMode="metaball";
this.postEffect=new V.PostEffect(this,"metaball",!1,a)},distortion:function(){this.renderMode="distortion";this.postEffect=new V.PostEffect(this,"distortion",!1)},deformSsao:function(a,b){this.postEffect.deformSsao(a,b)},mirror:function(a,b){a=a||100;b=b||{};this.groundMirror=new THREE.Mirror(v.renderer,v.nav.camera,{clipBias:b.bias||0.003,textureWidth:this.dimentions.w,textureHeight:this.dimentions.h,color:b.color||7829367,alpha:b.alpha||0.5,power:b.power||1,radius:b.radius||1});var c=new THREE.Mesh(this.geo.plane,
this.groundMirror.material);c.scale.set(a,a,a);c.position.copy(b.pos||new THREE.Vector3);c.rotateX(-V.PI90);c.add(this.groundMirror);this.scene.add(c)},resize:function(){this.dimentions.w=window.innerWidth;this.dimentions.h=window.innerHeight;this.dimentions.r=this.dimentions.w/this.dimentions.h;this.renderer.setSize(this.dimentions.w,this.dimentions.h);this.nav.camera.aspect=this.dimentions.r;this.nav.camera.updateProjectionMatrix();null!==this.groundMirror&&this.groundMirror.resize(this.dimentions.w,
this.dimentions.h,v.nav.camera);null!==this.postEffect&&this.postEffect.isActive&&this.postEffect.resize(this.dimentions.w,this.dimentions.h)},colorBack:function(a){null!==this.postEffect&&this.renderer.setClearColor(a,1)},zone:function(a){a=a||{};var b=this.zones.length,c=a.pos||[0,0,0],d=a.s||1,e=new THREE.Mesh(this.geo[a.type||"ground"],this.mat.zone);e.name="zone"+b;e.scale.set(d,d,d);e.position.set(c[0],c[1],c[2]);e.visible=a.v||!1;this.base.add(e);this.zones[b]=e},addModel:function(a){null!==
this.basic&&this.scene.remove(this.basic);"plane"===this.model?(this.basic=new THREE.Mesh(this.geo.ground,a),this.basic.geometry.computeTangents(),this.basic.scale.set(50,50,50),this.scene.add(this.basic)):"sphere"===this.model?(this.basic=new THREE.Mesh(this.geo.sphereHigh,a),this.basic.scale.set(25,25,25),this.scene.add(this.basic)):(this.tmpmat=a,this.pool.load(this.model,this.onModelLoaded))},onModelLoaded:function(){var a=v.pool.meshes[v.model],b=new THREE.Geometry,c;for(c in a)b.merge(a[c].geometry);
v.basic=new THREE.Mesh(V.TransGeo(b,!0),v.tmpmat);"skull"==v.model?v.basic.scale.set(10,10,-10):"skullhigh"==v.model?v.basic.scale.set(2,2,-2):"head"==v.model?(v.basic.scale.set(8,8,-8),v.basic.position.y=-40):"woman"==v.model?(v.basic.scale.set(60,60,-60),v.basic.position.y=-37):v.basic.scale.set(1,1,-1);v.scene.add(v.basic)},loadBasic:function(){this.pool.load("object",this.initObject,!1,!0)},initObject:function(){v.geo.box=(new THREE.BufferGeometry).fromGeometry(v.pool.getGeometry("object","box"));
v.geo.cylinder=(new THREE.BufferGeometry).fromGeometry(v.pool.getGeometry("object","cylinder"))},basic:function(){this.basic=new THREE.Mesh(this.geo.ground,this.mat.base);this.basic.scale.set(50,50,50);this.scene.add(this.basic)},ground:function(){this.m=new THREE.Mesh(this.geo.ground,this.mat.base);this.m.scale.set(50,50,50);this.scene.add(this.m)},tell:function(a){this.info.innerHTML=a},addBlob:function(a,b,c){a=new V.Blob(this,a,b);if(c)return a;this.meshs[this.meshs.length]=a},addSolid:function(a){var b=
new THREE.Mesh(this.geo[a.type||"box"],this.mat.base);a.pos=a.pos||[0,0,0];a.size=a.size||[1,1,1];b.scale.set(a.size[0],a.size[1],a.size[2]);b.position.set(a.pos[0],a.pos[1],a.pos[2]);b.rotation.set(0,0,0);this.scene.add(b);b.visible=!1;b=new THREE.BoxHelper(b);b.material=this.mat[a.mat||"chaine"];this.scene.add(b)},quat:function(a){var b=new THREE.Quaternion;b.setFromEuler(new THREE.Euler(a[0]*V.ToRad,a[1]*V.ToRad,a[2]*V.ToRad));return[b.x,b.y,b.z,b.w]},add:function(a){var b;a.pos=a.pos||[0,0,0];
a.size=a.size||[1,1,1];a.rot&&(a.quad=this.quat(a.rot));"blob"==a.type?(b=new THREE.Vector3(a.pos[0],a.pos[1],a.pos[2]),b=new V.Blob(this,b,4*a.size[0]),this.sceneBlob.add(b)):(b=new THREE.Mesh(this.geo[a.type||"box"],this.mat[a.mat||"shad_"+a.type]),b.scale.set(a.size[0],a.size[1],a.size[2]),b.position.set(a.pos[0],a.pos[1],a.pos[2]),b.rotation.set(0,0,0),this.scene.add(b));this.meshs[this.meshs.length]=b;this.w&&this.w.add(a)},addParticle:function(a){var b=this.ps.length;this.ps[b]=new V.Particle(this,
a);a.id=b;this.w&&this.w.addParticle(a)},initGeo:function(){var a=new THREE.SphereGeometry(1,34,28);a.computeTangents();var b={};b.sphere=(new THREE.BufferGeometry).fromGeometry(new THREE.SphereGeometry(1,12,10));b.sphereHigh=a;b.box=(new THREE.BufferGeometry).fromGeometry(new THREE.BoxGeometry(1,1,1));b.cylinder=(new THREE.BufferGeometry).fromGeometry(new THREE.CylinderGeometry(1,1,1,12,1));b.plane=new THREE.PlaneBufferGeometry(1,1);b.ground=new THREE.PlaneBufferGeometry(1,1);b.ground.applyMatrix((new THREE.Matrix4).makeRotationX(-V.PI90));
this.geo=b},initMat:function(){this.environment=THREE.ImageUtils.loadTexture("images/spherical/e_chrome.jpg");this.environment.mapping=THREE.SphericalReflectionMapping;var a={};a.none=new THREE.MeshBasicMaterial({transparent:!0,opacity:0,fog:!1,depthTest:!1,depthWrite:!1});a.zone=new THREE.MeshBasicMaterial({color:65280,transparent:!0,opacity:0.1,fog:!1,depthTest:!1,depthWrite:!1});a.base=new THREE.MeshBasicMaterial({color:0});a.anchor=new THREE.MeshBasicMaterial({color:16711795});a.chaine=new THREE.LineBasicMaterial({color:16711795,
transparent:!0,opacity:0.3});a.Sanchor=new THREE.MeshBasicMaterial({color:16777215});a.base2=new THREE.MeshBasicMaterial({color:65280,map:THREE.ImageUtils.loadTexture("images/grid1.jpg")});a.solid=new THREE.MeshBasicMaterial({color:16711795,transparent:!0,opacity:0.05,depthWrite:!1});a.shad_box=new THREE.MeshBasicMaterial({color:15158332,envMap:this.environment,reflectivity:0.4});a.shad_sphere=new THREE.MeshBasicMaterial({color:2719929,envMap:this.environment,reflectivity:0.4});a.shad_cylinder=new THREE.MeshBasicMaterial({color:9323693,
envMap:this.environment,reflectivity:0.4});this.mat=a},addWorker:function(a,b){this.w=new V.Worker(this,a);this.wFun=b||function(){}},addRenderTarget:function(a,b){var c=new THREE.WebGLRenderTarget(a,b,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat});this.isWithSerious=!0;return c},chaine:function(a){for(var b=a.close||!1,c=this.lines.length,d=new THREE.Geometry,e=0.5*a.points.length,f,g=0;g<e;g++)f=2*g,f=new THREE.Vector3(a.points[f],0,a.points[f+1]),d.vertices.push(f),
this.addAnchor(f,c,g,b);a.close&&d.vertices.push(new THREE.Vector3(a.points[0],0,a.points[1]));b=new THREE.Line(d,this.mat.chaine);this.scene.add(b);this.lines[c]=b;this.w&&this.w.chaine(a)},addAnchor:function(a,b,c,d){var e=new THREE.Mesh(this.geo.sphere,this.mat.anchor);e.scale.set(0.5,0.5,0.5);e.position.copy(a);e.name=d?"ca"+b+"_"+c:"oa"+b+"_"+c;this.base.add(e);this.anchors[e.name]=e},upAnchor:function(a){var b=a.name,c=b.lastIndexOf("_"),d=b.substring(2,c)||0,d=1*d,c=b.substring(c+1,b.length)||
0,c=1*c,d=this.lines[d],e=d.geometry.vertices.length;d.geometry.vertices[c].copy(a.position);"c"==b.substring(0,1)&&0==c&&d.geometry.vertices[e-1].copy(a.position);d.geometry.verticesNeedUpdate=!0;this.w&&(this.w.dr[2*c]=a.position.x,this.w.dr[2*c+1]=a.position.z,this.w.updateDecal())}};
V.Blob=function(a,b,c){THREE.Object3D.call(this);this.type="BLOB";this.root=a;a=this.root.geo.plane;var d=new THREE.MeshBasicMaterial({color:0});this.s1=new THREE.Mesh(a,d);c=2*(c||20);this.s1.scale.set(c,c,c);this.root.sceneBlob.add(this.s1);b&&this.position.copy(b)};V.Blob.prototype=Object.create(THREE.Object3D.prototype);V.Blob.prototype.constructor=V.Blob;V.Blob.prototype.clear=function(){this.root.sceneBlob.remove(this.s1)};
V.Blob.prototype.update=function(a){this.s1.position.copy(this.position);this.s1.quaternion.copy(a)};
V.Nav=function(a,b,c,d){this.isRevers=this.isFocus=!1;this.cammode="normal";this.EPS=1E-6;this.root=a;this.cursor=new V.Cursor;this.lockView=!1;this.camera=new THREE.PerspectiveCamera(V.Resolution.f,this.root.dimentions.r,0.1,2E3);this.mouse3d=new THREE.Vector3;this.selectName="";this.rayVector=new THREE.Vector3(0,0,1);this.raycaster=new THREE.Raycaster;this.target=new THREE.Vector3;this.position=new THREE.Vector3;this.cam={horizontal:b||0,vertical:c||90,distance:d||20,automove:!1,theta:0,phi:0};
this.mouse={x:0,y:0,ox:0,oy:0,h:0,v:0,mx:0,my:0,px:0,py:0,pz:0,r:0,down:!1,move:!0,button:0};this.key={up:0,down:0,left:0,right:0,ctrl:0,action:0,space:0,shift:0};this.moveCamera();this.root.canvas.oncontextmenu=function(a){a.preventDefault()};this.root.canvas.onclick=function(a){this.onMouseClick(a)}.bind(this);this.root.canvas.onmousemove=function(a){this.onMouseMove(a)}.bind(this);this.root.canvas.onmousedown=function(a){this.onMouseDown(a)}.bind(this);this.root.canvas.onmouseout=function(a){this.onMouseOut(a)}.bind(this);
this.root.canvas.onmouseup=function(a){this.onMouseUp(a)}.bind(this);this.root.canvas.onmousewheel=function(a){this.onMouseWheel(a)}.bind(this);this.root.canvas.addEventListener("DOMMouseScroll",function(a){this.onMouseWheel(a)}.bind(this),!1)};
V.Nav.prototype={constructor:V.Nav,moveCamera:function(){this.orbit();this.camera.position.copy(this.position);this.camera.lookAt(this.target)},moveSmooth:function(){this.orbit();this.camera.position.lerp(this.position,0.3);this.camera.lookAt(this.target)},revers:function(){this.isRevers=!0;this.camera.scale.x=-1},orbit:function(){var a=this.position,b=this.cam.distance,c=this.cam.vertical*V.ToRad,d=this.cam.horizontal*V.ToRad,c=Math.max(this.EPS,Math.min(Math.PI-this.EPS,c));this.cam.theta=d;this.cam.phi=
c;a.x=b*Math.sin(c)*Math.cos(d);a.y=b*Math.cos(c);a.z=b*Math.sin(c)*Math.sin(d);a.add(this.target)},mode:function(){"normal"==this.cammode?(this.cammode="fps",this.cam.distance=0.1):(this.cammode="normal",this.cam.distance=20);this.moveSmooth()},move:function(a){this.target.copy(a);this.moveCamera()},moveto:function(a,b,c){this.target.set(a,b,c);this.moveCamera()},onMouseClick:function(a){a.preventDefault();"function"==typeof mainClick&&mainClick()},onMouseDown:function(a){this.mouse.down=!0;this.mouse.button=
a.which;this.mouse.ox=a.clientX;this.mouse.oy=a.clientY;this.mouse.h=this.cam.horizontal;this.mouse.v=this.cam.vertical;this.mouse.x=a.clientX;this.mouse.y=a.clientY;this.mouse.px=this.target.x;this.mouse.pz=this.target.z;this.mouse.py=this.target.y;this.rayTest();"function"==typeof mainDown&&mainDown();a.preventDefault();a.stopPropagation()},onMouseUp:function(a){this.mouse.down=!1;this.cursor.change();"function"==typeof mainUp&&mainUp();a.preventDefault();a.stopPropagation()},onMouseOut:function(a){this.isFocus=
!1;this.mouse.down=!1;this.cursor.change();"function"==typeof mainUp&&mainUp();a.preventDefault();a.stopPropagation()},onMouseMove:function(a){this.isFocus||(self.focus(),window.top.main.blur(),this.isFocus=!0);if(this.mouse.down&&this.mouse.move&&!this.lockView){if(3==this.mouse.button){this.cursor.change("drag");var b=-(0.3*(a.clientX-this.mouse.ox));this.isRevers?(this.target.x=-(Math.sin(this.cam.theta)*b)+this.mouse.px,this.target.z=Math.cos(this.cam.theta)*b+this.mouse.pz):(this.target.x=Math.sin(this.cam.theta)*
b+this.mouse.px,this.target.z=-(Math.cos(this.cam.theta)*b)+this.mouse.pz);this.target.y=0.3*(a.clientY-this.mouse.oy)+this.mouse.py}else this.cursor.change("rotate"),this.cam.horizontal=this.isRevers?-(0.3*(a.clientX-this.mouse.ox))+this.mouse.h:0.3*(a.clientX-this.mouse.ox)+this.mouse.h,this.cam.vertical=0.3*-(a.clientY-this.mouse.oy)+this.mouse.v,0>this.cam.vertical&&(this.cam.vertical=0);this.moveCamera()}this.mouse.x=a.clientX;this.mouse.y=a.clientY;this.rayTest();"function"==typeof mainMove&&
mainMove();a.preventDefault();a.stopPropagation()},onMouseWheel:function(a){if("fps"!=this.cammode){var b=0;a.wheelDeltaY?b=0.01*a.wheelDeltaY:a.wheelDelta?b=0.05*a.wheelDelta:a.detail&&(b=1*-a.detail);this.cam.distance-=b;0.5>this.cam.distance&&(this.cam.distance=0.5);this.moveCamera();a.preventDefault();a.stopPropagation()}},rayTest:function(a){this.rayVector.x=this.mouse.x/this.root.dimentions.w*2-1;this.rayVector.y=2*-(this.mouse.y/this.root.dimentions.h)+1;this.rayVector.unproject(this.camera);
this.raycaster.ray.set(this.camera.position,this.rayVector.sub(this.camera.position).normalize());a=this.raycaster.intersectObjects(this.root.base.children);0<a.length?(this.selectName=a[0].object.name,this.mouse3d.copy(a[0].point),"function"==typeof mainRay&&mainRay(this.mouse3d,this.selectName)):this.selectName=""},bindKeys:function(){window.onkeydown=function(a){a=a||window.event;switch(a.keyCode){case 38:case 87:case 90:this.key.up=1;break;case 40:case 83:this.key.down=1;break;case 37:case 65:case 81:this.key.left=
1;break;case 39:case 68:this.key.right=1;break;case 17:case 67:this.key.ctrl=1;break;case 69:this.key.action=1;break;case 32:this.key.space=1;break;case 16:this.key.shift=1}}.bind(this);window.onkeyup=function(a){a=a||window.event;switch(a.keyCode){case 38:case 87:case 90:this.key.up=0;break;case 40:case 83:this.key.down=0;break;case 37:case 65:case 81:this.key.left=0;break;case 39:case 68:this.key.right=0;break;case 17:case 67:this.key.ctrl=0;break;case 69:this.key.action=0;break;case 32:this.key.space=
0;break;case 16:this.key.shift=0}}.bind(this)},unwrapDegrees:function(a){a%=360;180<a&&(a-=360);-180>a&&(a+=360);return a},unwrapRadian:function(a){a%=V.TwoPI;a>Math.PI&&(a-=V.TwoPI);a<-Math.PI&&(a+=V.TwoPI);return a}};V.Cursor=function(){this.current="auto";this.type={drag:"url(images/cursor/hand.png) 16 16,auto",draw:"url(images/cursor/draw.png) 16 16,auto",cut:"url(images/cursor/cut.png) 0 30,auto",rotate:"url(images/cursor/rotate.png) 16 16,auto",move:"move",auto:"auto"}};
V.Cursor.prototype={constructor:V.Cursor,change:function(a){a=a||"auto";a!==this.current&&(this.current=a,document.body.style.cursor=this.type[this.current])}};
V.randCarColor=function(){var a=V.randInt(0,100),b=V.randInt(0,3),a=[[16777215,13685203,15724527,15658734],[2433314,3156523,2569771,3092779],[9278613,12697788,13554900,12502212],[9672089,4342338,5921370,7632501],[12863776,16729121,6292233,14226462],[4903419,2579043,1150428,2725030],[10910006,8866081,14132587,5570567],[6287660,1605703,9285161,1750553],[16773386,16777149,16579295,16760074],[12134760,6036047,4693,16758759]][23>a?0:44>a?1:62>a?2:76>a?3:84>a?4:90>a?5:96>a?6:97>a?7:98>a?8:9][b].toString(16);
return a=6>a.length?"#0"+a:"#"+a};V.Material=function(a){this.root=a;this.shaders=[]};V.Material.prototype={constructor:V.Material,basic:function(a){var b=this.shaders.length;this.shaders[b]=new THREE.MeshBasicMaterial(a);return this.shaders[b]}};V.PostEffect=function(a,b,c,d){this.shaderLoaded=0;this.root=a;this.name=b;this.isActive=!1;this.init(c);this.callback=d||function(){}};
V.PostEffect.prototype={constructor:V.PostEffect,init:function(a){var b=this.root,c=b.dimentions.w,d=b.dimentions.h,e=new THREE.Color(2435374);this.composer=new THREE.EffectComposer(b.renderer);this.renderModel=new THREE.RenderPass(b.scene,b.nav.camera,null,e,0);this.composer.addPass(this.renderModel);if("ssao"==this.name){if(this.isAdvancedSSAO=a||!1)this.oldMap=[],this.oldSkinMap=[],this.depthShader2=THREE.DepthDef,this.depthUniforms2=THREE.UniformsUtils.clone(this.depthShader2.uniforms),this.depthMaterial2=
new THREE.ShaderMaterial({fragmentShader:this.depthShader2.fragmentShader,vertexShader:this.depthShader2.vertexShader,uniforms:this.depthUniforms2,skinning:!0}),this.depthMaterial2.blending=THREE.NoBlending;this.depthShader=THREE.DepthDef;this.depthUniforms=THREE.UniformsUtils.clone(this.depthShader.uniforms);this.depthMaterial=new THREE.ShaderMaterial({fragmentShader:this.depthShader.fragmentShader,vertexShader:this.depthShader.vertexShader,uniforms:this.depthUniforms});this.depthMaterial.blending=
THREE.NoBlending;this.depthParam={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,stencilBuffer:!1};this.depthTarget=new THREE.WebGLRenderTarget(c,d,this.depthParam);this.fxaa=new THREE.ShaderPass(THREE.FXAAShader);this.fxaa.uniforms.resolution.value.set(1/c,1/d);this.composer.addPass(this.fxaa);this.ao=new THREE.ShaderPass(THREE.SSAOShader);this.ao.uniforms.tDepth.value=this.depthTarget;this.ao.uniforms.size.value.set(c,d);this.ao.uniforms.cameraNear.value=b.nav.camera.near;
this.ao.uniforms.cameraFar.value=b.nav.camera.far;this.ao.needsSwap=!0;this.composer.addPass(this.ao);this.ao.renderToScreen=!0;this.isActive=b.renderer.autoClear=!0}"metaball"==this.name&&(this.shaderLoaded=0,a=function(){this.testShader()}.bind(this),this.gauss=new V.GaussTexture(64,1,0.067),this.blobxy=new V.Shader("Gauss_xy",{gauss:this.gauss,transparent:!0,blending:THREE.NormalBlending,depthTest:!1,depthWrite:!0},!1,a),this.blobmin=new V.Shader("Gauss_min",{gauss:this.gauss,transparent:!0,blending:THREE.NormalBlending,
depthTest:!1,depthWrite:!0},!1,a),this.metaball=new V.Shader("Metaball",{},!1,a));"distortion"==this.name&&(this.fxaa=new THREE.ShaderPass(THREE.FXAAShader),this.fxaa.uniforms.resolution.value.set(1/c,1/d),a=function(){this.testShader()}.bind(this),this.effect=new V.Shader("Distortion",{},!1,a))},testShader:function(){var a=this.root;this.shaderLoaded++;if("distortion"==this.name){this.updateDistortionEffect();var b=new THREE.ShaderPass(this.effect);this.composer.addPass(b);this.composer.addPass(this.fxaa);
this.fxaa.renderToScreen=!0;this.isActive=a.renderer.autoClear=!0}if("metaball"==this.name&&3==this.shaderLoaded){var b=a.dimentions.w,c=a.dimentions.h;this.glowParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBufer:!1};this.rootTarget=new THREE.WebGLRenderTarget(b,c,this.glowParameters);this.renderModelRoot=new THREE.RenderPass(a.scene,a.nav.camera);this.rootcomposer=new THREE.EffectComposer(a.renderer,this.rootTarget);this.rootcomposer.addPass(this.renderModelRoot);
this.glowTargetxy=new THREE.WebGLRenderTarget(b,c,this.glowParameters);this.renderModelGlowxy=new THREE.RenderPass(a.sceneBlob,a.nav.camera,this.blobxy);this.glowcomposerxy=new THREE.EffectComposer(a.renderer,this.glowTargetxy);this.glowcomposerxy.addPass(this.renderModelGlowxy);this.glowTarget=new THREE.WebGLRenderTarget(b,c,this.glowParameters);this.renderModelGlow=new THREE.RenderPass(a.sceneBlob,a.nav.camera,this.blobmin);this.glowcomposer=new THREE.EffectComposer(a.renderer,this.glowTarget);
this.glowcomposer.addPass(this.renderModelGlow);this.renderTarget=new THREE.WebGLRenderTarget(b,c,this.glowParameters);this.meta=new THREE.ShaderPass(this.metaball);this.meta.uniforms.mapping.value=this.rootcomposer.renderTarget2;this.meta.uniforms.tDiffuseXY.value=this.glowcomposerxy.renderTarget2;this.meta.uniforms.tDiffuseMin.value=this.glowcomposer.renderTarget2;this.meta.uniforms.size.value.set(b,c);this.meta.transparent=!0;this.meta.uniforms.env.value=THREE.ImageUtils.loadTexture("./images/spherical/env0.jpg");
this.meta.isActive=!0;this.meta.needsSwap=!0;this.meta.renderToScreen=!0;this.composer.addPass(this.renderTarget);this.composer.addPass(this.meta);this.isActive=!0;this.callback()}},render:function(){var a=this.root;if("ssao"==this.name)if(this.isAdvancedSSAO){for(var b=a.skinned.children.length,c=a.content.children.length,d=c;d--;)this.oldMap[d]||(this.oldMap[d]=a.content.children[d].material),a.content.children[d].material=this.depthMaterial;for(d=b;d--;)this.oldSkinMap[d]||(this.oldSkinMap[d]=
a.skinned.children[d].material),a.skinned.children[d].material=this.depthMaterial2;a.renderer.render(a.scene,a.nav.camera,this.depthTarget);for(d=c;d--;)a.content.children[d].material=this.oldMap[d];for(d=b;d--;)a.skinned.children[d].material=this.oldSkinMap[d]}else a.scene.overrideMaterial=this.depthMaterial,a.renderer.render(a.scene,a.nav.camera,this.depthTarget),a.scene.overrideMaterial=null;if("metaball"==this.name){b=a.nav.camera.quaternion;for(d=a.meshs.length;d--;)c=a.meshs[d],"BLOB"==c.type&&
c.update(b);this.rootcomposer.render();this.glowcomposerxy.render();this.glowcomposer.render()}this.composer.render()},resize:function(a,b){"ssao"==this.name&&(this.depthTarget=new THREE.WebGLRenderTarget(a,b,this.depthParam),this.ao.uniforms.tDepth.value=this.depthTarget,this.ao.uniforms.size.value.set(a,b),this.fxaa.uniforms.resolution.value.set(1/a,1/b));"metaball"==this.name&&this.meta.uniforms.size.value.set(a,b);"distortion"==this.name&&(this.fxaa.uniforms.resolution.value.set(1/a,1/b),this.updateDistortionEffect());
this.composer.setSize(a,b)},updateDistortionEffect:function(){var a=this.root,b=Math.tan(70*V.ToRad)/a.nav.camera.aspect;a.nav.camera.fov=2*Math.atan(b)*V.ToDeg;a.nav.camera.updateProjectionMatrix();this.effect.uniforms.strength.value=0.5;this.effect.uniforms.height.value=b;this.effect.uniforms.aspectRatio.value=a.nav.camera.aspect;this.effect.uniforms.cylindricalRatio.value=2},deformSsao:function(a,b){a.computeBoundingBox();var c=a.boundingBox.max,d=a.boundingBox.min;this.depthUniforms.tdeep.value=
b;this.depthUniforms.offset.value=new THREE.Vector2(0-d.x,0-d.z);this.depthUniforms.range.value=new THREE.Vector2(c.x-d.x,c.z-d.z)}};V.GaussTexture=function(a,b,c){this.sets={size:a||64,height:b||1,deviation:c||0.067};return this.createGaussTexture()};
V.GaussTexture.prototype={createGaussTexture:function(){var a=new Uint8Array(this.sets.size*this.sets.size*3),b,c,d,e;for(e=this.sets.size;e--;)for(d=this.sets.size;d--;)b=2*d/this.sets.size-1,c=2*e/this.sets.size-1,b=this.sets.height*Math.exp(-(b*b+c*c)/this.sets.deviation),b*=255,c=3*(e*this.sets.size+d),a[c+0]=b,a[c+1]=b,a[c+2]=b;a=new THREE.DataTexture(a,this.sets.size,this.sets.size,THREE.RGBFormat);a.wrapS=a.wrapT=THREE.ClampToEdgeWrapping;a.needsUpdate=!0;return a}};V.Particle=function(a,b){this.root=a;this.mode=this.root.renderMode;this.radius=b.radius||0.25;if("metaball"==this.mode)this.rotation=this.root.nav.camera.quaternion,this.particles=[];else{this.geometry=new THREE.Geometry;this.material=new THREE.PointCloudMaterial({size:3.5*this.radius,sizeAttenuation:!0,map:this.makeSprite(),transparent:!0,alphaTest:0.6});this.particles=new THREE.PointCloud(this.geometry,this.material);this.particles.sortParticles=!0;this.particles.dynamic=!0;for(var c=b.n||0;c--;)this.addV();
this.root.scene.add(this.particles)}};
V.Particle.prototype={constructor:V.Particle,makeSprite:function(){var a=document.createElement("canvas");a.width=a.height=32;var b=a.getContext("2d"),c=0.5*a.width,d=0.5*a.height;b.beginPath();var e=b.createRadialGradient(c,c,5,c,c,16);e.addColorStop(0,"#FFFFFF");e.addColorStop(1,"#DDDDDD");b.fillStyle=e;b.arc(c,d,16,0,2*Math.PI,!1);b.fill();a=new THREE.Texture(a);a.needsUpdate=!0;return a},getLength:function(){return"metaball"==this.mode?this.particles.length:this.particles.geometry.vertices.length},
addNum:function(a){for(;a--;)this.addV();"metaball"!==this.mode&&this.update()},addV:function(a,b,c){a=new THREE.Vector3(a||0,b||0,c||0);"metaball"==this.mode?this.particles.push(v.addBlob(a,4*this.radius,!0)):(this.particles.geometry.vertices.push(a),this.particles.geometry.dispose())},move:function(a,b,c,d){"metaball"==this.mode?(this.particles[a].position.set(b,c,d),this.particles[a].update(this.rotation)):this.geometry.vertices[a]&&(this.geometry.vertices[a].x=b||0,this.geometry.vertices[a].y=
c||0,this.geometry.vertices[a].z=d||0)},update:function(){"metaball"!==this.mode&&(this.geometry.verticesNeedUpdate=!0)}};V.Point=function(a,b,c,d,e,f){this.x=a||0;this.y=b||0;this.z=c||0;this.r=d||0;this.c=e||0;this.s=f||0};V.UserImput=function(a){this.root=a;this.key={up:0,down:0,left:0,right:0,ctrl:0,action:0,space:0,shift:0};this.gamepads=[]};
V.UserImput.prototype={constructor:V.UserImput,bindKeys:function(){window.onkeydown=function(a){a=a||window.event;switch(a.keyCode){case 38:case 87:case 90:this.key.up=1;break;case 40:case 83:this.key.down=1;break;case 37:case 65:case 81:this.key.left=1;break;case 39:case 68:this.key.right=1;break;case 17:case 67:this.key.ctrl=1;break;case 69:this.key.action=1;break;case 32:this.key.space=1;break;case 16:this.key.shift=1}}.bind(this);window.onkeyup=function(a){a=a||window.event;switch(a.keyCode){case 38:case 87:case 90:this.key.up=
0;break;case 40:case 83:this.key.down=0;break;case 37:case 65:case 81:this.key.left=0;break;case 39:case 68:this.key.right=0;break;case 17:case 67:this.key.ctrl=0;break;case 69:this.key.action=0;break;case 32:this.key.space=0;break;case 16:this.key.shift=0}}.bind(this)},testGamepad:function(a){window.ongamepadconnected=function(a){this.gamepads.push(a.gamepad)}.bind(this);window.ongamepaddisconnected=function(a){for(var c in this.gamepads)if(this.gamepads[c].index==a.gamepad.index){this.gamepads.splice(c,
1);break}}.bind(this)},updateGamepad:function(){}};V.Shader=function(a,b,c,d){this.isEdit=c||!1;THREE.ShaderMaterial.call(this,b);this.visible=this.isActive=!1;this.parameters=b;this.callback=d||function(){};this.oldUniforms=null;this.loading(a,b)};V.Shader.prototype=Object.create(THREE.ShaderMaterial.prototype);V.Shader.prototype.constructor=V.Shader;V.Shader.prototype.editor=function(a){window.top.main.shader.open(a)};V.Shader.prototype.up=function(a,b){this.uniforms[a]&&(this.uniforms[a].value=b)};
V.Shader.prototype.upColor=function(a,b){this.uniforms[a]&&this.uniforms[a].value.setRGB(b[0]/255,b[1]/255,b[2]/255)};V.Shader.prototype.upBool=function(a,b){this.uniforms[a]&&(this.uniforms[a].value=b?1:0)};V.Shader.prototype.init=function(a){this.setValues(a)};V.Shader.prototype.updateShader=function(a){this.oldUniforms=this.uniforms;this.dispose();this.isActive=!1;a=eval(a);this.apply(a,!0)};
V.Shader.prototype.apply=function(a,b){if(b)this.uniforms=this.oldUniforms;else{this.uniforms=THREE.UniformsUtils.clone(a.uniforms);for(var c in this.parameters)this.uniforms[c]&&(this.uniforms[c].value=this.parameters[c])}this.vertexShader=a.vs;this.fragmentShader=a.fs;this.visible=this.isActive=this.needsUpdate=!0;b||this.callback()};
V.Shader.prototype.loading=function(a){var b;window.XMLHttpRequest?b=new XMLHttpRequest:window.ActiveXObject&&(b=new ActiveXObject("Microsoft.XMLHTTP"));b.onload=function(c){c=eval(b.responseText);this.apply(c);this.isEdit&&window.top.main.shader.pushShader(a,c)}.bind(this);b.open("GET","shaders/"+a+".js",!0);b.send()};
V.LoadShader=function(a){var b;window.XMLHttpRequest?b=new XMLHttpRequest:window.ActiveXObject&&(b=new ActiveXObject("Microsoft.XMLHTTP"));b.onload=function(a){return eval(b.responseText)};b.open("GET","shaders/"+a+".js",!0);b.send()};V.Skylab=function(a){this.root=a;this.env=null;this.autocycle=this.isRender=!1;this.settings={distance:4E5,turbidity:10,reileigh:2,mieCoefficient:0.005,mieDirectionalG:0.8,luminance:1,elevation:0.49,azimuth:0.27};this.init()};
V.Skylab.prototype={constructor:V.Skylab,init:function(){this.position=new THREE.Vector3;this.target=new THREE.Vector3;this.root.environment=new THREE.WebGLRenderTarget(256,256,{minFilter:THREE.LinearMipmapLinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat});this.root.environment.mapping=THREE.SphericalReflectionMapping;this.root.mat.shad_box.envMap=this.root.environment;this.root.mat.shad_sphere.envMap=this.root.environment;this.root.mat.shad_cylinder.envMap=this.root.environment;var a=
V.Sky;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({fragmentShader:a.fs,vertexShader:a.vs,uniforms:this.uniforms,side:THREE.BackSide,depthWrite:!1});this.sunPosition();this.geo=(new THREE.BufferGeometry).fromGeometry(new THREE.SphereGeometry(1,20,12));this.sky=new THREE.Mesh(this.geo,this.material);this.skytest=new THREE.Mesh((new THREE.BufferGeometry).fromGeometry(new THREE.SphereGeometry(800,20,12)),this.material);this.scene=new THREE.Scene;this.camera=
new THREE.OrthographicCamera(-0.7,0.7,0.7,-0.7,0.1,2);this.scene.add(this.camera);this.scene.add(this.sky);this.root.scene.add(this.skytest);this.update()},sunPosition:function(){var a=Math.PI*(this.settings.elevation-0.5),b=2*Math.PI*(this.settings.azimuth-0.5),c=new THREE.Vector3;c.x=this.settings.distance*Math.cos(b);c.y=this.settings.distance*Math.sin(b)*Math.sin(a);c.z=this.settings.distance*Math.sin(b)*Math.cos(a);this.uniforms.sunPosition.value.copy(c)},orbit:function(){var a=this.position,
b=this.root.nav.cam.phi+V.PI,c=this.root.nav.cam.theta;a.x=0.7*Math.sin(b)*Math.cos(c);a.y=0.7*Math.cos(b);a.z=0.7*Math.sin(b)*Math.sin(c);this.camera.position.copy(this.position);this.camera.lookAt(this.target)},update:function(){this.autocycle&&(this.settings.elevation-=0.001,1<this.settings.elevation&&(this.settings.elevation=-1),-1>this.settings.elevation&&(this.settings.elevation=1));this.sunPosition();this.orbit();this.render()},render:function(){this.root.renderer.render(this.scene,this.camera,
this.root.environment,!0);this.isRender=!0}};
V.Sky={uniforms:{luminance:{type:"f",value:1},turbidity:{type:"f",value:2},reileigh:{type:"f",value:1},mieCoefficient:{type:"f",value:0.005},mieDirectionalG:{type:"f",value:0.8},sunPosition:{type:"v3",value:new THREE.Vector3},moonPosition:{type:"v3",value:new THREE.Vector3}},fs:"uniform sampler2D skySampler;\nuniform vec3 sunPosition;\nuniform vec3 moonPosition;\nvarying vec3 vWorldPosition;\nvec3 cameraPos = vec3(0., 0., 0.);\nuniform float luminance;\nuniform float turbidity;\nuniform float reileigh;\nuniform float mieCoefficient;\nuniform float mieDirectionalG;\nvec3 sunDirection = normalize(sunPosition);\nvec3 moonDirection = normalize(moonPosition);\nfloat reileighCoefficient = reileigh;\nconst float e = 2.71828182845904523536028747135266249775724709369995957;\nconst float pi = 3.141592653589793238462643383279502884197169;\nconst float n = 1.0003;\nconst float N = 2.545E25;\nconst float pn = 0.035;\t\nconst vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\nconst vec3 K = vec3(0.686, 0.678, 0.666);\nconst float v = 4.0;\nconst float rayleighZenithLength = 8.4E3;\nconst float mieZenithLength = 1.25E3;\nconst vec3 up = vec3(0.0, 1.0, 0.0);\nconst float EE = 1000.0;\nconst float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\nconst float cutoffAngle = pi/1.95;\nconst float steepness = 1.5;\nvec3 totalRayleigh(vec3 lambda){\nreturn (8.0 * pow(abs(pi), 3.0) * pow(abs(pow(abs(n), 2.0) - 1.0), 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(abs(lambda), vec3(4.0)) * (6.0 - 7.0 * pn));\n}\nvec3 simplifiedRayleigh(){\nreturn 0.0005 / vec3(94, 40, 18);\n}\nfloat rayleighPhase(float cosTheta){\nreturn (3.0 / (16.0*pi)) * (1.0 + pow(abs(cosTheta), 2.0));\n}\nvec3 totalMie(vec3 lambda, vec3 K, float T){\nfloat c = (0.2 * T ) * 10E-18;\nreturn 0.434 * c * pi * pow(abs((2.0 * pi) / lambda), vec3(v - 2.0)) * K;\n}\nfloat hgPhase(float cosTheta, float g){\nreturn (1.0 / (4.0*pi)) * ((1.0 - pow(abs(g), 2.0)) / pow(abs(1.0 - 2.0*g*cosTheta + pow(g, 2.0)), 1.5));\n}\nfloat sunIntensity(float zenithAngleCos){\nreturn EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));\n}\nfloat A = 0.15;\nfloat B = 0.50;\nfloat C = 0.10;\nfloat D = 0.20;\nfloat E = 0.02;\nfloat F = 0.30;\nfloat W = 1000.0;\nvec3 Uncharted2Tonemap(vec3 x){\nreturn ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\nvoid main(){\nfloat sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\nreileighCoefficient = reileighCoefficient - (1.0* (1.0-sunfade));\nfloat sunE = sunIntensity(dot(sunDirection, up));\nvec3 betaR = simplifiedRayleigh() * reileighCoefficient;\nvec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;\nfloat zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\nfloat sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(abs(93.885 - ((zenithAngle * 180.0) / pi)), -1.253));\nfloat sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(abs(93.885 - ((zenithAngle * 180.0) / pi)), -1.253));\nvec3 Fex = exp(-(betaR * sR + betaM * sM));\nfloat cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\nfloat rPhase = rayleighPhase(cosTheta*0.5+0.5);\nvec3 betaRTheta = betaR * rPhase;\nfloat mPhase = hgPhase(cosTheta, mieDirectionalG);\nvec3 betaMTheta = betaM * mPhase;\nvec3 Lin = pow(abs(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex)),vec3(1.5));\nLin *= mix(vec3(1.0),pow(abs(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex),vec3(1.0/2.0)),clamp(pow(abs(1.0-dot(up, sunDirection)),5.0),0.0,1.0));\nvec3 direction = normalize(vWorldPosition - cameraPos);\nfloat theta = acos(direction.y);\nfloat phi = atan(direction.z, direction.x);\nvec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\nvec3 L0 = vec3(0.1) * Fex;\nfloat sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\nL0 += (sunE * 19000.0 * Fex)*sundisk;\nvec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));\nvec3 texColor = (Lin+L0);\ntexColor *= 0.04 ;\ntexColor += vec3(0.0,0.001,0.0025)*0.3;\nfloat g_fMaxLuminance = 1.0;\nfloat fLumScaled = 0.1 / luminance;\nfloat fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled); \nfloat ExposureBias = fLumCompressed;\nvec3 curr = Uncharted2Tonemap((log2(2.0/pow(abs(luminance),4.0)))*texColor);\nvec3 color = curr*whiteScale;\nvec3 retColor = pow(abs(color),vec3(1.0/(1.2+(1.2*sunfade))));\ngl_FragColor.rgb = retColor;\ngl_FragColor.a = 1.0;\n}",vs:"varying vec3 vWorldPosition;\nvoid main(){\n    vWorldPosition = vec4(modelMatrix * vec4( position, 1.0 )).xyz;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}"};V.Terrain=function(a,b){this.main=a;this.debug=!0;b=b||{};this.div=b.div||[256,256];this.size=b.size||[50,10,50];this.isAutoMove=b.AutoMove||!1;this.isMove=b.Move||!1;this.ratio=0;this.hfFloatBuffer=null;this.mapOffset=20;this.specularMap=this.normalMap=this.heightMap=null;this.mlib={};this.textureCounter=0;this.cameraOrtho=this.sceneRenderTarget=null;this.H=this.W=0;this.quadTarget=null;this.animDelta=0;this.animDeltaDir=-1;this.lightVal=0;this.lightDir=1;this.pos={x:0,y:0};this.ease={x:0,y:0};this.maxspeed=
2;this.dec=this.acc=0.1;this.updateNoise=!0;this.tmpData=this.terrainShader=this.specularShader=this.normalShader=this.noiseShader=null;this.isWithDepthTest=!0;this.textures=[];this.maps="level0 level1 level2 level3 level4 diffuse1 diffuse2 normal".split(" ");this.fullLoaded=!1;this.end=this.timerTest=null;this.init()};
V.Terrain.prototype={constructor:V.Terrain,load:function(a){this.end=a;for(a=this.maps.length;a--;)this.textures[a]=new THREE.ImageUtils.loadTexture("images/terrain/"+this.maps[a]+".jpg");this.timerTest=setInterval(function(){this.testTextures()}.bind(this),20)},testTextures:function(){if(this.textures.length==this.maps.length){clearInterval(this.timerTest);for(var a=this.textures.length;a--;)this.textures[a].format=THREE.RGBFormat,this.textures[a].wrapS=this.textures[a].wrapT=THREE.RepeatWrapping;
this.start()}},clear:function(){this.container.remove(this.mesh);this.mesh.geometry.dispose();this.mlib.heightmap.dispose();this.mlib.normal.dispose();this.mlib.terrain.dispose()},init:function(){this.ratio=this.size[1]/765;this.hfFloatBuffer=new Float32Array(this.div[0]*this.div[1]);var a=new THREE.PlaneBufferGeometry(this.size[0],this.size[2],this.div[0]-1,this.div[1]-1);this.mesh=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:16733525}));this.mesh.rotation.x=-Math.PI/2;this.mesh.geometry.computeTangents();
this.mesh.visible=!1;this.mesh.castShadow=!0;this.mesh.receiveShadow=!0;this.container=new THREE.Group;this.container.add(this.mesh);this.main.scene.add(this.container);this.W=this.main.dimentions.w||512;this.H=this.main.dimentions.h||512;this.load();this.debug&&(a=new THREE.PlaneBufferGeometry(0.25*this.size[0],0.25*this.size[2]),this.m1=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:16777215})),this.m2=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:16777215})),this.m3=new THREE.Mesh(a,
new THREE.MeshBasicMaterial({color:16777215})),this.container.add(this.m1),this.container.add(this.m2),this.container.add(this.m3),this.m2.position.set(0,0,0.75*this.size[0]),this.m1.position.set(0.25*-this.size[0],0,0.75*this.size[0]),this.m3.position.set(0.25*this.size[0],0,0.75*this.size[0]),this.m1.rotation.x=-Math.PI/4,this.m2.rotation.x=-Math.PI/4,this.m3.rotation.x=-Math.PI/4,this.m1.visible=!1,this.m2.visible=!1,this.m3.visible=!1)},start:function(){this.isWithDepthTest&&(this.tmpData=new Uint8Array(this.div[0]*
this.div[1]*4));this.sceneRenderTarget=new THREE.Scene;this.cameraOrtho=new THREE.OrthographicCamera(this.W/-2,this.W/2,this.H/2,this.H/-2,-1E4,1E4);this.cameraOrtho.position.z=100;this.sceneRenderTarget.add(this.cameraOrtho);this.normalShader=V.TerrainNormal;var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.heightMap=new THREE.WebGLRenderTarget(this.div[0],this.div[1],a);this.normalMap=new THREE.WebGLRenderTarget(this.div[0],this.div[1],a);this.specularMap=
new THREE.WebGLRenderTarget(this.div[0],this.div[1],a);this.normalShader.uniforms.height.value=0.05;this.normalShader.uniforms.resolution.value.set(this.div[0],this.div[1]);this.normalShader.uniforms.scale.value.set(1,1);this.normalShader.uniforms.heightMap.value=this.heightMap;this.noiseShader=V.TerrainNoise;this.specularShader=V.TerrainLuminosity;this.specularShader.uniforms.tDiffuse.value=this.normalMap;this.terrainShader=V.TerrainShader;this.terrainShader.uniforms.env.value=this.main.environment;
this.terrainShader.uniforms.reflectivity.value=0.6;this.terrainShader.uniforms.enableReflection.value=!0;this.terrainShader.uniforms.oceanTexture.value=this.textures[0];this.terrainShader.uniforms.sandyTexture.value=this.textures[1];this.terrainShader.uniforms.grassTexture.value=this.textures[2];this.terrainShader.uniforms.rockyTexture.value=this.textures[3];this.terrainShader.uniforms.snowyTexture.value=this.textures[4];this.terrainShader.uniforms.tNormal.value=this.normalMap;this.terrainShader.uniforms.uNormalScale.value=
3.5;this.terrainShader.uniforms.tDisplacement.value=this.heightMap;this.terrainShader.uniforms.tDiffuse1.value=this.textures[5];this.terrainShader.uniforms.tDiffuse2.value=this.textures[6];this.terrainShader.uniforms.tSpecular.value=this.specularMap;this.terrainShader.uniforms.tDetail.value=this.textures[7];this.terrainShader.uniforms.enableDiffuse1.value=!0;this.terrainShader.uniforms.enableDiffuse2.value=!0;this.terrainShader.uniforms.enableSpecular.value=!0;this.terrainShader.uniforms.diffuse.value.setHex(3158064);
this.terrainShader.uniforms.specular.value.setHex(1118481);this.terrainShader.uniforms.ambient.value.setHex(1052688);this.terrainShader.uniforms.shininess.value=20;this.terrainShader.uniforms.uDisplacementScale.value=this.size[1];this.terrainShader.uniforms.uRepeatOverlay.value.set(12,12);this.debug&&(this.m1.material.map=this.heightMap,this.m2.material.map=this.normalMap,this.m3.material.map=this.specularMap,this.m1.material.needsUpdate=!0,this.m2.material.needsUpdate=!0,this.m3.material.needsUpdate=
!0,this.m1.visible=!0,this.m2.visible=!0,this.m3.visible=!0);for(var a=[["heightmap",this.noiseShader.fs,this.noiseShader.vs,this.noiseShader.uniforms,!1],["normal",this.normalShader.fs,this.normalShader.vs,this.normalShader.uniforms,!1],["specular",this.specularShader.fs,this.specularShader.vs,this.specularShader.uniforms,!1],["terrain",this.terrainShader.fs,this.terrainShader.vs,this.terrainShader.uniforms,!0]],b,c=a.length;c--;)b=new THREE.ShaderMaterial({uniforms:a[c][3],vertexShader:a[c][2],
fragmentShader:a[c][1],lights:!1,fog:!1}),this.mlib[a[c][0]]=b;this.mlib.terrain.transparent=!0;a=new THREE.PlaneBufferGeometry(this.W,this.H);this.quadTarget=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:0}));this.quadTarget.position.z=-500;this.sceneRenderTarget.add(this.quadTarget);this.mlib.terrain.isActive=!0;this.mesh.material=this.mlib.terrain;this.fullLoaded=this.mesh.visible=!0;this.update(1)},easing:function(){var a=this.main.nav.key,b=this.main.clock.getDelta(),c=this.main.nav.cam.theta;
this.maxspeed=a.shift?5:1;a.up&&(this.ease.y-=this.acc);a.down&&(this.ease.y+=this.acc);a.left&&(this.ease.x-=this.acc);a.right&&(this.ease.x+=this.acc);this.ease.x>this.maxspeed&&(this.ease.x=this.maxspeed);this.ease.y>this.maxspeed&&(this.ease.y=this.maxspeed);this.ease.x<-this.maxspeed&&(this.ease.x=-this.maxspeed);this.ease.y<-this.maxspeed&&(this.ease.y=-this.maxspeed);a.up||a.down||(this.ease.y=this.ease.y>this.dec?this.ease.y-this.dec:this.ease.y<-this.dec?this.ease.y+this.dec:0);a.left||a.right||
(this.ease.x=this.ease.x>this.dec?this.ease.x-this.dec:this.ease.x<-this.dec?this.ease.x+this.dec:0);if(0!=this.ease.x||0!=this.ease.z)this.pos.x+=0.01*(Math.sin(c)*this.ease.x+Math.cos(c)*this.ease.y),this.pos.y+=0.01*(Math.cos(c)*this.ease.x-Math.sin(c)*this.ease.y),this.update(b)},move:function(a,b,c){this.pos.x=a;this.pos.y=b;this.update(c)},update:function(a){this.fullLoaded&&(Date.now(),this.lightVal=THREE.Math.clamp(this.lightVal+0.5*a*this.lightDir,0.01,0.8),this.terrainShader.uniforms.uNormalScale.value=
THREE.Math.mapLinear((this.lightVal-0.01)/0.79,0,1,0.6,3.5),this.updateNoise&&(this.animDelta=THREE.Math.clamp(this.animDelta+7.5E-4*this.animDeltaDir,0,0.05),this.noiseShader.uniforms.time.value+=a*this.animDelta,this.noiseShader.uniforms.offset.value.set(this.pos.x,this.pos.y),this.terrainShader.uniforms.uOffset.value.set(8*this.pos.x,8*this.pos.y),this.quadTarget.material=this.mlib.heightmap,this.main.renderer.render(this.sceneRenderTarget,this.cameraOrtho,this.heightMap,!0),this.isWithDepthTest&&
(a=this.main.renderer.getContext(),a.readPixels(0,0,this.div[0],this.div[1],a.RGBA,a.UNSIGNED_BYTE,this.tmpData)),this.quadTarget.material=this.mlib.normal,this.main.renderer.render(this.sceneRenderTarget,this.cameraOrtho,this.normalMap,!0),this.quadTarget.material=this.mlib.specular,this.main.renderer.render(this.sceneRenderTarget,this.cameraOrtho,this.specularMap,!0)))},anim:function(){this.animDeltaDir*=-1},night:function(){this.lightDir*=-1},getz:function(a,b){if(null==this.tmpData)return 0;var c=
4*Math.floor((Math.floor((-b/this.size[2]+0.5)*this.div[1])-1)*this.div[0]+Math.floor((a/this.size[0]+0.5)*this.div[0]));return(this.tmpData[c+0]+this.tmpData[c+1]+this.tmpData[c+2])*this.ratio},generatePhysicsData:function(){for(var a,b,c=0,d=this.div[0];d--;)for(b=0;b<this.div[1];b++)a=d*this.div[0]+(b+1),a*=4,c++,this.hfFloatBuffer[c]=(this.tmpData[a+0]+this.tmpData[a+1]+this.tmpData[a+2])*this.ratio}};
V.TerrainNormal={uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(128,128)},scale:{type:"v2",value:new THREE.Vector2(0,0)},height:{type:"f",value:0.05}},vs:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fs:"uniform float height;\nuniform vec2 resolution;\nuniform sampler2D heightMap;\nvarying vec2 vUv;\nvoid main() {\nfloat val = texture2D( heightMap, vUv ).x;\nfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\nfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\ngl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\n}"};
V.TerrainNoise={uniforms:{time:{type:"f",value:1},scale:{type:"v2",value:new THREE.Vector2(1.5,1.5)},offset:{type:"v2",value:new THREE.Vector2(0,0)}},fs:"uniform float time;\nvarying vec2 vUv;\nvec4 permute( vec4 x ) {\nreturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n}\nvec4 taylorInvSqrt( vec4 r ) {\nreturn 1.79284291400159 - 0.85373472095314 * r;\n}\nfloat snoise( vec3 v ) {\nconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\nconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n// First corner\nvec3 i  = floor( v + dot( v, C.yyy ) );\nvec3 x0 = v - i + dot( i, C.xxx );\n// Other corners\nvec3 g = step( x0.yzx, x0.xyz );\nvec3 l = 1.0 - g;\nvec3 i1 = min( g.xyz, l.zxy );\nvec3 i2 = max( g.xyz, l.zxy );\nvec3 x1 = x0 - i1 + 1.0 * C.xxx;\nvec3 x2 = x0 - i2 + 2.0 * C.xxx;\nvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n// Permutations\ni = mod( i, 289.0 );\nvec4 p = permute( permute( permute(\n i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n+ i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n+ i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n// Gradients\n// ( N*N points uniformly over a square, mapped onto an octahedron.)\nfloat n_ = 1.0 / 7.0; // N=7\nvec3 ns = n_ * D.wyz - D.xzx;\nvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\nvec4 x_ = floor( j * ns.z );\nvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\nvec4 x = x_ *ns.x + ns.yyyy;\nvec4 y = y_ *ns.x + ns.yyyy;\nvec4 h = 1.0 - abs( x ) - abs( y );\nvec4 b0 = vec4( x.xy, y.xy );\nvec4 b1 = vec4( x.zw, y.zw );\nvec4 s0 = floor( b0 ) * 2.0 + 1.0;\nvec4 s1 = floor( b1 ) * 2.0 + 1.0;\nvec4 sh = -step( h, vec4( 0.0 ) );\nvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\nvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\nvec3 p0 = vec3( a0.xy, h.x );\nvec3 p1 = vec3( a0.zw, h.y );\nvec3 p2 = vec3( a1.xy, h.z );\nvec3 p3 = vec3( a1.zw, h.w );\n// Normalise gradients\nvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\np0 *= norm.x;\np1 *= norm.y;\np2 *= norm.z;\np3 *= norm.w;\n// Mix final noise value\nvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\nm = m * m;\nreturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 ), dot( p3, x3 ) ) );\n}\nfloat surface3( vec3 coord ) {\nfloat n = 0.0;\nn += 1.0 * abs( snoise( coord ) );\nn += 0.5 * abs( snoise( coord * 2.0 ) );\nn += 0.25 * abs( snoise( coord * 4.0 ) );\nn += 0.125 * abs( snoise( coord * 8.0 ) );\nreturn n;\n}\nvoid main( void ) {\nvec3 coord = vec3( vUv, -time );\nfloat n = surface3( coord );\ngl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n}",
vs:"varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\nvoid main( void ) {\nvUv = uv * scale + offset;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"};V.TerrainLuminosity={uniforms:{tDiffuse:{type:"t",value:null}},vs:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fs:"uniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v, v, v, texel.w );\n}"};
V.TerrainShader={uniforms:{env:{type:"t",value:null},enableReflection:{type:"i",value:0},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},fogcolor:{type:"c",value:new THREE.Color(2435374)},oceanTexture:{type:"t",value:null},sandyTexture:{type:"t",value:null},grassTexture:{type:"t",value:null},rockyTexture:{type:"t",value:null},snowyTexture:{type:"t",value:null},enableDiffuse1:{type:"i",value:0},enableDiffuse2:{type:"i",
value:0},enableSpecular:{type:"i",value:1},enableFog:{type:"i",value:1},tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},tDetail:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tDisplacement:{type:"t",value:null},uNormalScale:{type:"f",value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(15658734)},specular:{type:"c",value:new THREE.Color(16716049)},ambient:{type:"c",value:new THREE.Color(328965)},
shininess:{type:"f",value:30},opacity:{type:"f",value:1},vAmount:{type:"f",value:30},uRepeatBase:{type:"v2",value:new THREE.Vector2(1,1)},uRepeatOverlay:{type:"v2",value:new THREE.Vector2(1,1)},uOffset:{type:"v2",value:new THREE.Vector2(0,0)}},fs:"uniform sampler2D env;\nuniform sampler2D oceanTexture;\nuniform sampler2D sandyTexture;\nuniform sampler2D grassTexture;\nuniform sampler2D rockyTexture;\nuniform sampler2D snowyTexture;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nuniform bool enableReflection;\nuniform bool enableFog;\nvarying float vAmount;\nuniform vec3 fogcolor;\nuniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\nuniform float uNormalScale;\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\nuniform vec2 uOffset;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec2 vN;\nvarying vec3 vViewPosition;\nvarying vec3 vWorldPosition;\nvoid main() {\nvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\nvec2 uvBase = uRepeatBase * vUv;\nvec4 water = (smoothstep(0.01, 0.20, vAmount) - smoothstep(0.24, 0.26, vAmount)) * texture2D( oceanTexture, uvOverlay );\nvec4 sandy = (smoothstep(0.10, 0.30, vAmount) - smoothstep(0.28, 0.31, vAmount)) * texture2D( sandyTexture, uvOverlay );\nvec4 grass = (smoothstep(0.28, 0.40, vAmount) - smoothstep(0.35, 0.40, vAmount)) * texture2D( grassTexture, uvOverlay );\nvec4 rocky = (smoothstep(0.30, 0.76, vAmount) - smoothstep(0.40, 0.70, vAmount)) * texture2D( rockyTexture, uvOverlay );\nvec4 snowy = (smoothstep(0.80, 0.99, vAmount))                                   * texture2D( snowyTexture, uvOverlay );\ngl_FragColor = vec4( vec3( 1.0 ), opacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse1 && enableDiffuse2 ) {\nvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\nvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\ngl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\ngl_FragColor = vec4( gl_FragColor.xyz, 1.0 )+ water + sandy + grass + rocky + snowy;\n } else if( enableDiffuse1 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n} else if( enableDiffuse2 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nif ( enableReflection ) {\nvec3 ev = texture2D( env, vN ).rgb;\ngl_FragColor.xyz = mix( gl_FragColor.xyz, ev.xyz, reflectivity );\n}\nif(enableFog){\nfloat circle_radius_min = 0.3;\nfloat circle_radius_max = 0.5;\nfloat fogDensity = 0.4;\nfloat fog_far = 30.4;\nvec2 nuv = vUv - vec2(0.5, 0.5);\nfloat dist =  sqrt(dot(nuv, nuv));\nfloat fog = 0.0;\nif ( dist > circle_radius_min )\nfog =(dist-circle_radius_min)*5.0;\ngl_FragColor = vec4(gl_FragColor.xyz, 1.-fog);\n}\n}",
vs:"attribute vec4 tangent;\nuniform vec2 uRepeatBase;\nuniform sampler2D tNormal;\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;\nvarying vec3 vWorldPosition;\nvarying float vAmount;\nvarying vec2 vN;\nvarying vec3 vPos;\nvoid main() {\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 bumpData = texture2D( tDisplacement, uv );\nvAmount = bumpData.r;\nvec2 uvBase = uv * uRepeatBase;\nvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec3 displacedPosition = normal * df + position;\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\nvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\nvNormal = normalMatrix * normalTex;\nvPos = normalize( vec3( mvPosition ) );\nvec3 r = reflect( vPos, normalize(vNormal) );\nfloat m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\nvN = r.xy / m + .5;\n}"};V.Worker=function(a,b){this.root=a;this.name=b;this.msg="";this.postMess=this.update=null;this.testNewAmmo=window.top.main.useDirectDebug;var c,d,e,f,g,k,l,h;switch(this.name){case "crowd":c="js/worker/crowd_worker.js";h="../../js/libs/crowd.js";d=1E3;e=100;f=10;g=1E3;k=3;l=2;this.update=this.upCrowd;this.postMess=this.postCrowd;break;case "liquid":c="js/worker/liquid_worker.js";h="../../js/libs/liquidfun.js";d=1E3;e=100;f=10;g=8E3;k=4;l=2;this.update=this.upLiquid;this.postMess=this.postLiquid;break;
case "oimo":c="js/worker/oimo_worker.js";h="../../js/libs/oimo.min.js";d=1E3;f=e=10;g=0;k=8;l=3;this.update=this.upOimo;this.postMess=this.postOimo;break;case "ammo":this.testNewAmmo?(c="js/worker/ammo_worker_new.js",h="../../js/libs/ammo.js"):(c="js/worker/ammo_worker.js",h="../../js/libs/ammo.min.js");d=1E3;e=20;f=10;g=0;k=8;l=40;this.update=this.upAmmo;this.postMess=this.postAmmo;break;case "traffic":c="js/worker/traffic_worker.js",h="../../js/libs/traffic.min.js",d=1E3,f=e=10,g=0,l=k=3,this.update=
this.upTraffic,this.postMess=this.postTraffic}window.top.main.transcode.useTrans&&(h=window.top.main.transcode.codes[this.name]);this.w=new Worker(c);this.w.postMessage=this.w.webkitPostMessage||this.w.postMessage;this.w.onmessage=function(a){this.update(a)}.bind(this);this.ar=new V.AR32(d*k);this.dr=new V.AR32(e*l);this.pr=new V.AR32(g*l);this.drn=new V.AR32(f);this.drc=new V.AR32(f);this.prn=new V.AR32(f);this.d=[16.667,0,0];this.isReady=!1;this.fps=0;this.w.postMessage({m:"init",url:h})};
V.Worker.prototype={constructor:V.Worker,clear:function(){this.w.terminate()},computeTime:function(){this.root.deb=" | "+this.name.toUpperCase()+" "+this.fps;var a=this.d;a[1]=a[0]-(Date.now()-a[2]);a[1]=0>a[1]?0:a[1];setTimeout(function(){this.d[2]=Date.now();this.postMess();this.msg=""}.bind(this),a[1])},loop:function(){this.d[2]=Date.now();this.postMess();this.msg=""},upCrowd:function(a){if(a.data.init)this.postMess();else{a.data.w&&!this.isReady&&(this.isReady=!0);this.fps=a.data.fps;this.ar=
a.data.ar;a=this.root.meshs;for(var b=a.length,c;b--;)c=3*b,a[b].position.x=this.ar[c],a[b].position.z=this.ar[c+1],a[b].rotation.y=this.ar[c+2];this.computeTime()}},postCrowd:function(){this.w.postMessage({m:"run",ar:this.ar},[this.ar.buffer])},upTraffic:function(a){if(a.data.init)this.postMess();else{a.data.w&&!this.isReady&&(this.isReady=!0);this.fps=a.data.fps;this.ar=a.data.ar;a=this.root.meshs;for(var b=a.length,c;b--;)c=3*b,a[b].position.x=this.ar[c],a[b].position.z=this.ar[c+1],a[b].rotation.y=
this.ar[c+2];this.computeTime()}},postTraffic:function(){this.w.postMessage({m:"run",ar:this.ar},[this.ar.buffer])},upLiquid:function(a){if(a.data.init)this.postMess();else{a.data.w&&!this.isReady&&(this.isReady=!0);this.fps=a.data.fps;this.ar=a.data.ar;this.pr=a.data.pr;this.prn=a.data.prn;var b=this.root.meshs;a=b.length;for(var c;a--;)c=4*a,b[a].position.x=this.ar[c],b[a].position.z=this.ar[c+1],b[a].rotation.y=this.ar[c+2];a=this.root.ps.length;for(var d;a--;){b=this.root.ps[a];c=this.prn[a];
b.getLength()!==c&&b.addNum(c);for(d=c;d--;)c=2*d,b.move(d,this.pr[c],0,this.pr[c+1]);b.update()}this.computeTime()}},postLiquid:function(){this.w.postMessage({m:"run",prn:this.prn,ar:this.ar,pr:this.pr},[this.ar.buffer,this.pr.buffer])},upAmmo:function(a){if(a.data.init)this.postMess();else{a.data.w&&!this.isReady&&(this.isReady=!0);this.fps=a.data.fps;this.ar=a.data.ar;this.dr=a.data.dr;a=this.root.meshs;var b=a.length,c,d;for(d=this.ar;b--;)c=8*b,d[c]&&(a[b].position.set(d[c+1],d[c+2],d[c+3]),
"BLOB"!==a.type&&a[b].quaternion.set(d[c+4],d[c+5],d[c+6],d[c+7]));a=this.root.cars;d=this.dr;for(var b=a.length,e,f,g;b--;)for(c=40*b,this.root.speeds[b]=d[c],this.root.nav.move(a[b].position),this.root.steering[b].rotation.z+=0.5*d[c+8],a[b].position.set(d[c+1],d[c+2],d[c+3]),a[b].quaternion.set(d[c+4],d[c+5],d[c+6],d[c+7]),g=4;g--;)f=c+8*(g+1),e=this.root.wheels[g],e.position.set(d[f+1],d[f+2],d[f+3]),e.quaternion.set(d[f+4],d[f+5],d[f+6],d[f+7]);this.computeTime()}},postAmmo:function(){this.w.postMessage({m:"run",
time:this.d[1],m2:this.msg,key:this.root.imput.key,ar:this.ar,dr:this.dr},[this.ar.buffer,this.dr.buffer])},upOimo:function(a){if(a.data.init)this.postMess();else{a.data.w&&!this.isReady&&(this.isReady=!0);this.fps=a.data.fps;this.ar=a.data.ar;a=this.root.meshs;for(var b=a.length,c;b--;)c=8*b,this.ar[c]&&(a[b].position.set(this.ar[c+1],this.ar[c+2],this.ar[c+3]),"BLOB"!==a.type&&a[b].quaternion.set(this.ar[c+4],this.ar[c+5],this.ar[c+6],this.ar[c+7]));this.computeTime()}},postOimo:function(){this.w.postMessage({m:"run",
m2:this.msg,drn:this.drn,drc:this.drc,ar:this.ar,dr:this.dr},[this.ar.buffer])},room:function(a){var b=0.5*a.h-a.m;this.w.postMessage({m:"room",obj:{n:5,size:[a.w-a.m,a.m,a.d-a.m,a.w+a.m,a.h,a.m,a.w+a.m,a.h,a.m,a.m,a.h,a.d-a.m,a.m,a.h,a.d-a.m],pos:[0,0.5*-a.m,0,0,b,0.5*-a.d,0,b,0.5*a.d,0.5*-a.w,b,0,0.5*a.w,b,0]}});v.addSolid({type:"box",size:[a.w-a.m,a.h-a.m,a.d-a.m],pos:[0,b+0.5*a.m,0]});v.addSolid({type:"box",size:[a.w+a.m,a.h,a.d+a.m],pos:[0,b,0]})},add:function(a){this.w.postMessage({m:"add",
obj:a})},addParticle:function(a){this.w.postMessage({m:"addParticle",obj:a})},post:function(a){this.w.postMessage(a)},chaine:function(a){a.close&&(this.drc[0]=1);for(var b=0.5*a.points.length,c=this.drn[0]=b;c--;)b=2*c,this.dr[b]=a.points[b],this.dr[b+1]=a.points[b+1];this.updateDecal()},updateDecal:function(){this.post({m:"updecal",dr:this.dr,drn:this.drn,drc:this.drc})}};V.SeaPool=function(a){this.root=a;this.meshes={};this.callback={}};
V.SeaPool.prototype={constructor:V.SeaPool,load:function(a,b,c,d){this.callback[a]=b||function(){};this.noLoader=d||!1;var e="",f=new THREE.SEA3D(!0);this.noLoader||(f.onProgress=function(b){this.root.loader.innerHTML="Loading "+a+": "+(100*b.progress).toFixed(0)+"%"}.bind(this),f.onDownloadProgress=function(a){this.root.loader.style.display="block"}.bind(this));f.onComplete=function(b){this.root.loader.style.display="none";this.meshes[a]={};b=f.meshes.length;for(var d;b--;)d=f.meshes[b],this.meshes[a][d.name]=
d,e+=d.name+",";c&&console.log(e);this.callback[a]()}.bind(this);f.parser=THREE.SEA3D.DEFAULT;f.load("models/"+a+".sea")},getGeometry:function(a,b,c){a=this.meshes[a][b].geometry;c||(c=(new THREE.Matrix4).makeScale(1,1,-1),a.applyMatrix(c),a.verticesNeedUpdate=!0,a.normalsNeedUpdate=!0);a.computeFaceNormals();a.computeVertexNormals(!0);a.computeTangents();return a}};
V.ProjectUV=function(a,b){null===a.boundingBox&&a.computeBoundingBox();var c=a.boundingBox.max,d=a.boundingBox.min;b.uniforms.offset.value=new THREE.Vector2(0-d.x,0-d.z);b.uniforms.range.value=new THREE.Vector2(c.x-d.x,c.z-d.z)};V.TransGeo=function(a,b){a.mergeVertices();a.verticesNeedUpdate=!0;a.normalsNeedUpdate=!0;a.computeFaceNormals();a.computeVertexNormals(!0);a.computeTangents();if(b)return a;var c=(new THREE.BufferGeometry).fromGeometry(a);a.dispose();return c};
V.ImgPool=function(a){this.root=a;this.imgs={}};
V.ImgPool.prototype={constructor:V.ImgPool,load:function(a,b,c){this.callback=c||function(){};this.folder=a||"images/";if("string"==typeof b||b instanceof String)b=[b];this.total=b.length;this.root.loader.style.display="block";this.loadnext(b)},loadnext:function(a){var b=new Image;b.onload=function(){var c=a[0].substring(a[0].lastIndexOf("/")+1,a[0].lastIndexOf("."));this.imgs[c]=b;a.shift();a.length?(this.root.loader.innerHTML="Loading images: "+a.length,this.loadnext(a)):(this.root.loader.style.display=
"none",this.callback())}.bind(this);b.src=this.folder+a[0]},texture:function(a,b,c,d,e){a=new THREE.Texture(this.imgs[a]);a.flipY=b||!1;c&&(a.wrapS=a.wrapT=THREE.RepeatWrapping);d&&(a.minFilter=a.magFilter=THREE.LinearFilter);e&&(a.format=THREE.RGBFormat);a.needsUpdate=!0;return a}};
V.getVertex=function(a,b){var c=[],d,e,f,g=!1;e=a.vertices;void 0==e?(e=a.attributes.position.array,g=!0,f=e.length/3):f=e.length;for(;f--;)d=3*f,g?(c[d+0]=e[d+0]*b[0],c[d+1]=e[d+1]*b[1],c[d+2]=e[d+2]*b[2]):(c[d+0]=e[f].x*b[0],c[d+1]=e[f].y*b[1],c[d+2]=e[f].z*b[2]);return c};
V.getFaces=function(a,b){for(var c=[],d,e,f,g,k=a.faces,l=a.vertices,h=k.length;h--;)d=9*h,e=k[h],f=l[e.a],g=l[e.b],e=l[e.c],c[d+0]=f.x*b[0],c[d+1]=f.y*b[1],c[d+2]=f.z*b[2],c[d+3]=g.x*b[0],c[d+4]=g.y*b[1],c[d+5]=g.z*b[2],c[d+6]=e.x*b[0],c[d+7]=e.y*b[1],c[d+8]=e.z*b[2];return c};var dat;V.Gui=function(a){this.gui=new dat.GUI;this.tmp={};a&&this.model3d()};
V.Gui.prototype={constructor:V.Gui,model3d:function(){this.gui.add(v,"model",V.MeshList).onChange(function(){v.addModel(shader)})},color:function(a,b){var c=this;this.tmp[a]=[255*b.r,255*b.g,255*b.b];this.gui.addColor(this.tmp,a).onChange(function(){shader.upColor(a,c.tmp[a])})},int:function(a,b){var c=this;this.tmp[a]=b?!0:!1;this.gui.add(this.tmp,a).onChange(function(){shader.upBool(a,c.tmp[a])})},float:function(a,b){var c=this;this.tmp[a]=b;this.gui.add(this.tmp,a).step(0.1).onChange(function(){shader.up(a,
c.tmp[a])})},textures:function(a){}};V.LoGui=function(a){this.content=document.createElement("div");this.content.className="logui";document.body.appendChild(this.content)};V.LoGui.prototype={constructor:V.LoGui,slide:function(){}};V.Environment=function(){this.shaders=[];this.envLists="e_chrome.jpg e_black.jpg e_brush.jpg e_metal.jpg e_plastic.jpg e_plastic_r.jpg e_smooth.jpg env.jpg env0.jpg env1.jpg".split(" ");this.nEnv=0;this.init()};
V.Environment.prototype={constructor:V.Environment,init:function(){var a=document.createElement("div");a.className="environment";var b=document.createElement("canvas");b.width=b.height=64;a.appendChild(b);this.envcontext=b.getContext("2d");a.onmousedown=function(){this.load()}.bind(this);a.onmouseup=function(){window.top.focus()};document.body.appendChild(a);this.load()},load:function(){var a=new Image;a.onload=function(){this.nEnv++;this.nEnv==this.envLists.length&&(this.nEnv=0);this.envcontext.drawImage(a,
0,0,64,64);this.environment=new THREE.Texture(a);this.environment.needsUpdate=!0;for(var b=this.shaders.length;b--;)this.shaders[b].isActive&&(this.shaders[b].uniforms.env.value=this.environment)}.bind(this);a.src="images/spherical/"+this.envLists[this.nEnv]},add:function(a){this.shaders.push(a)}};V.BvhPlayer=function(a){this.root=a;this.reader=new V.BvhReader(this.root);this.model=null};
V.BvhPlayer.prototype={constructor:V.BvhPlayer,init:function(){},skin:function(a,b){null!==this.model&&this.clearSkin();this.model=a;this.bones=this.model.skeleton.bones;this.preservesBoneSize=b||!1;this.root.scene.add(this.model)},clearSkin:function(){this.root.scene.remove(this.model)},boneSize:function(a){a/=30;0>a&&(a=0.1);this.reader.boneSize=a},speed:function(a){this.reader.speed=a||1},load:function(a,b){this.reader.load(a,b)},update:function(){this.reader.update();null!==this.model&&this.updateSkin()},
updateSkin:function(){for(var a,b,c,d=this.reader.Nodes,e=this.bones.length,f,g,k,l=new THREE.Quaternion,h=new THREE.Vector3,n=new THREE.Vector3,m=0;m<e;m++)a=this.bones[m],c=a.name,k=a.parent.matrixWorld||new THREE.Matrix4,g=a.parent.mtx?a.parent.mtx:k,(b=d[c])?(f=b.matrixWorld.clone(),h.setFromMatrixPosition(f),l.setFromRotationMatrix(f),b=new THREE.Matrix4,a.rootMatrix||(a.rootMatrix=a.matrixWorld.clone()),b.makeRotationFromQuaternion(l),b.multiply(a.rootMatrix),b.setPosition(h),f=(new THREE.Matrix4).getInverse(k),
f=(new THREE.Matrix4).multiplyMatrices(f,b),b.multiplyMatrices(k,f),this.preservesBoneSize&&"Hips"!==c&&(f=(new THREE.Matrix4).getInverse(g),n.setFromMatrixPosition(a.matrix),f=(new THREE.Matrix4).multiplyMatrices(f,b),f.setPosition(n),b=(new THREE.Matrix4).multiplyMatrices(g,f))):b=(new THREE.Matrix4).multiplyMatrices(g,a.matrix),a.mtx=b}};
THREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=this.bones.length;b--;)this.bones[b].mtx||(this.bones[b].mtx=this.bones[b].matrixWorld),a.multiplyMatrices(this.bones[b]?this.bones[b].mtx:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();
V.BvhReader=function(a){this.root=a;this.debug=!0;this.type="";this.rootBone=this.data=null;this.secsPerFrame=this.numFrames=0;this.play=!1;this.channels=null;this.lines="";this.speed=0.5;this.nodes=null;this.order={};this.Nodes=this.BoneByName=this.ChildNodes=this.ParentNodes=null;this.startTime=this.oldFrame=this.frame=0;this.position=new THREE.Vector3(0,0,0);this.scale=1;this.tmpOrder="";this.tmpAngle=[];this.skeleton=null;this.bones=[];this.nodesMesh=[];this.nodeSize=this.boneSize=0.4;this.endFunction=
null;this.boxgeo=(new THREE.BufferGeometry).fromGeometry(new THREE.BoxGeometry(1.5,1.5,1));this.boxgeo.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,0.5));this.nodegeo=(new THREE.BufferGeometry).fromGeometry(new THREE.SphereGeometry(this.nodeSize,8,6));this.boneMaterial=new THREE.MeshBasicMaterial({color:16777028});this.nodeMaterial=new THREE.MeshBasicMaterial({color:8978312})};
V.BvhReader.prototype={constructor:V.BvhReader,load:function(a,b){this.callback=b||function(){};this.type=a.substring(a.length-3,a.length);if("bvh"===this.type){var c=new XMLHttpRequest;c.open("GET",a,!0);c.onreadystatechange=function(){4==c.readyState&&this.parseData(c.responseText.split(/\s+/g))}.bind(this);c.send(null)}else"png"===this.type&&window.top.main.transcode.load(a,function(a){this.parseData(a.split(/\s+/g))}.bind(this))},parseData:function(a){this.data=a;this.channels=[];this.nodes=[];
this.Nodes={};this.distances={};this.ParentNodes={};this.ChildNodes={};this.BoneByName={};for(a=!1;!a;)switch(this.data.shift()){case "ROOT":null!==this.rootBone&&this.clearNode();null!==this.skeleton&&this.clearSkeleton();this.rootBone=this.parseNode(this.data);this.rootBone.position.copy(this.position);this.rootBone.scale.set(this.scale,this.scale,this.scale);break;case "MOTION":this.data.shift(),this.numFrames=parseInt(this.data.shift()),this.data.shift(),this.data.shift(),this.secsPerFrame=parseFloat(this.data.shift()),
a=!0}console.log("BVH frame:"+this.numFrames+" s/f:"+this.secsPerFrame+" channels:"+this.channels.length+" node:"+this.nodes.length);this.getDistanceList();this.getNodeList();this.debug&&this.addSkeleton();this.startTime=Date.now();this.play=!0},reScale:function(a){this.scale=a;this.rootBone&&this.rootBone.scale.set(this.scale,this.scale,this.scale)},rePosition:function(a){this.position=a;this.rootBone.position.copy(this.position)},getDistanceList:function(){this.distances={};for(var a=this.nodes.length,
b,c;a--;)b=this.nodes[a],c=b.name,this.distances[c]=b.children.length?V.DistanceTest((new THREE.Vector3).setFromMatrixPosition(b.matrixWorld),b.children[0].position):2},getNodeList:function(){for(var a=this.nodes.length,b,c,d=0;d<a;d++)b=this.nodes[d],c=b.name,this.Nodes[c]=b,this.ParentNodes[c]=b.parent?b.parent:null,this.ChildNodes[c]=b.children.length?b.children[0]:null;this.callback();null!==this.endFunction&&this.endFunction()},showHideSkeleton:function(a){this.skeleton.visible=a?!0:!1},addSkeleton:function(){this.skeleton=
new THREE.Group;this.bones=[];this.nodesMesh=[];for(var a=this.nodes.length,b,c,d=0;d<a;d++)b=this.nodes[d],this.nodesMesh[d]=new THREE.Mesh(this.nodegeo,this.nodeMaterial),this.skeleton.add(this.nodesMesh[d]),"Site"!==b.name&&(c=new THREE.Mesh(this.boxgeo,this.boneMaterial),c.castShadow=!0,c.receiveShadow=!0,c.rotation.order="XYZ",c.name=b.name,this.skeleton.add(c),this.bones[d]=c,this.BoneByName[b.name]=c);this.root.scene.add(this.skeleton)},clearSkeleton:function(){for(var a=this.skeleton.children.length;a--;)this.skeleton.remove(this.skeleton.children[a]);
this.root.scene.remove(this.skeleton);this.skeleton=null},updateSkeleton:function(){for(var a,b,c,d,e=this.nodes.length,f=0;f<e;f++)b=this.nodes[f],c=this.bones[f],d=b.name,a=b.matrixWorld,this.nodesMesh[f].position.setFromMatrixPosition(a),"Site"!==d&&(c.position.setFromMatrixPosition(a),b.children.length&&(a=(new THREE.Vector3).setFromMatrixPosition(b.children[0].matrixWorld),c.lookAt(a),c.rotation.z=0,"Head"==d?c.scale.set(2*this.boneSize,2*this.boneSize,1.3*this.distances[d]*this.boneSize):c.scale.set(this.boneSize,
this.boneSize,this.distances[d])))},transposeName:function(a){if("hip"===a||"SpineBase"===a)a="Hips";if("abdomen"===a||"SpineBase2"===a)a="Spine1";if("chest"===a||"SpineMid"===a)a="Chest";if("neck"===a||"Neck2"===a)a="Neck";"head"===a&&(a="Head");"lCollar"===a&&(a="LeftCollar");"rCollar"===a&&(a="RightCollar");"lShldr"===a&&(a="LeftUpArm");"rShldr"===a&&(a="RightUpArm");"lForeArm"===a&&(a="LeftLowArm");"rForeArm"===a&&(a="RightLowArm");"lHand"===a&&(a="LeftHand");"rHand"===a&&(a="RightHand");"lFoot"===
a&&(a="LeftFoot");"rFoot"===a&&(a="RightFoot");"lThigh"===a&&(a="LeftUpLeg");"rThigh"===a&&(a="RightUpLeg");"lShin"===a&&(a="LeftLowLeg");"rShin"===a&&(a="RightLowLeg");if("RightHip"===a||"HipRight"===a)a="RightUpLeg";if("LeftHip"===a||"HipLeft"===a)a="LeftUpLeg";if("RightKnee"===a||"KneeRight"===a)a="RightLowLeg";if("LeftKnee"===a||"KneeLeft"===a)a="LeftLowLeg";if("RightAnkle"===a||"AnkleRight"===a)a="RightFoot";if("LeftAnkle"===a||"AnkleLeft"===a)a="LeftFoot";if("RightShoulder"===a||"ShoulderRight"===
a)a="RightUpArm";if("LeftShoulder"===a||"ShoulderLeft"===a)a="LeftUpArm";if("RightElbow"===a||"ElbowRight"===a)a="RightLowArm";if("LeftElbow"===a||"ElBowLeft"===a)a="LeftLowArm";if("RightWrist"===a||"WristRight"===a)a="RightHand";if("LeftWrist"===a||"WristLeft"===a)a="LeftHand";if("rcollar"===a||"CollarRight"===a)a="RightCollar";if("lcollar"===a||"CollarLeft"===a)a="LeftCollar";"rtoes"===a&&(a="RightToe");"ltoes"===a&&(a="LeftToe");"upperback"===a&&(a="Spine1");return a},parseNode:function(a){var b,
c,d;b=a.shift();b=this.transposeName(b);d=new THREE.Group;d.name=b;for(b=!1;!b;)switch(a.shift()){case "OFFSET":d.position.set(parseFloat(a.shift()),parseFloat(a.shift()),parseFloat(a.shift()));d.offset=d.position.clone();break;case "CHANNELS":c=parseInt(a.shift());for(var e=0;0<=c?e<c:e>c;0<=c?e++:e--)this.channels.push({node:d,prop:a.shift()});break;case "JOINT":case "End":d.add(this.parseNode(a));break;case "}":b=!0}this.nodes.push(d);return d},clearNode:function(){var a;if(this.nodes){for(a=0;a<
this.nodes.length;a++)this.nodes[a]=null;this.nodes.length=0}},animate:function(){for(var a,b=this.frame%this.numFrames*this.channels.length,c=this.channels,d=!1,e=0,f=c.length;e<f;e++){a=c[e];d="Hips"===a.node.name?!0:!1;switch(a.prop){case "Xrotation":this.autoDetectRotation(a.node,"X",parseFloat(this.data[b]));break;case "Yrotation":this.autoDetectRotation(a.node,"Y",parseFloat(this.data[b]));break;case "Zrotation":this.autoDetectRotation(a.node,"Z",parseFloat(this.data[b]));break;case "Xposition":a.node.position.x=
d?a.node.offset.x+parseFloat(this.data[b])+this.position.x:a.node.offset.x+parseFloat(this.data[b]);break;case "Yposition":a.node.position.y=d?a.node.offset.y+parseFloat(this.data[b])+this.position.y:a.node.offset.y+parseFloat(this.data[b]);break;case "Zposition":a.node.position.z=d?a.node.offset.z+parseFloat(this.data[b])+this.position.z:a.node.offset.z+parseFloat(this.data[b])}b++}0<this.bones.length&&this.updateSkeleton()},autoDetectRotation:function(a,b,c){this.tmpOrder+=b;c*=V.ToRad;"X"===b?
this.tmpAngle[0]=c:"Y"===b?this.tmpAngle[1]=c:this.tmpAngle[2]=c;3===this.tmpOrder.length&&(b=new THREE.Euler(this.tmpAngle[0],this.tmpAngle[1],this.tmpAngle[2],this.tmpOrder),this.order[a.name]=this.tmpOrder,a.setRotationFromEuler(b),a.updateMatrixWorld(),this.tmpOrder="",this.tmpAngle.length=0)},update:function(){this.play&&(this.frame=(Date.now()-this.startTime)/this.secsPerFrame/1E3*this.speed|0,0!==this.oldFrame&&(this.frame+=this.oldFrame),this.frame>this.numFrames&&(this.oldFrame=this.frame=
0,this.startTime=Date.now()),this.animate())},next:function(){this.play=!1;this.frame++;this.frame>this.numFrames&&(this.frame=0);this.animate()},prev:function(){this.play=!1;this.frame--;0>this.frame&&(this.frame=this.numFrames);this.animate()}};V.DistanceTest=function(a,b){var c=b.x-a.x,d=b.y-a.y,e=b.z-a.z,c=Math.sqrt(c*c+d*d+e*e);0>=c&&(c=0.1);return c};
